// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        Int         @id @default(autoincrement())
  username  String       @unique
  password  String
  email     String       @unique
  role      String       @default("user")
  createdAt DateTime     @default(now())
  itemIds   Int[]

  items     Item[]
  bids      Bid[]
  notifications Notification[]
}

model Item {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  description  String
  startingPrice Decimal?
  currentPrice Decimal?
  imageUrl     String? 
  endTime      DateTime
  createdAt    DateTime @default(now())
  userId       Int

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  bids         Bid[]
}

model Bid {
  id         Int      @id @default(autoincrement())
  itemId     Int      
  userId     Int      
  bidAmount  Decimal  
  createdAt  DateTime @default(now())

  
  item       Item     @relation(fields: [itemId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int      
  message   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
